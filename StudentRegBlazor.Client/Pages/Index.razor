@page "/"
@using StudentRegBlazor.Shared
@inject HttpClient Http
@inject IUriHelper uriHelper
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<div class="modal fade" id="LoginModalForm">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">LOGIN</h3>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label>User Name</label>
                        <input type="text" class="form-control" bind="@stu.UserName" />
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <input type="password" class="form-control" bind="@stu.Password" />
                    </div>

                </form>
            </div>
            <div class="modal-footer">

                <button class="btn btn-info" data-dismiss="modal" onclick="@(async () =>  await HandleLogin())">LOGIN</button>

            </div>
        </div>
    </div>
</div>

@functions{



    private StudentShared stu { get; set; } = new StudentShared();

    StudentShared[] stunew;

    protected async Task HandleLogin()
    {


        //  stunew[0].Token = "";

        stunew = await Http.PostJsonAsync<StudentShared[]>("http://localhost:56834/api/Student/Login", stu);

        if (stunew[0].Token != "")
        {
            await localStorage.SetItemAsync("token", stunew[0].Token);
            await localStorage.SetItemAsync("email", stunew[0].Email);

        }



    }

}
